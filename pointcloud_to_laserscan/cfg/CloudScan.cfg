#! /usr/bin/env python                                                                   
# Software License Agreement (BSD License)                                               
#                                                                                        
# Copyright (c) 2009, Willow Garage, Inc.                                                
# All rights reserved.                                                                   
#                                                                                        
# Redistribution and use in source and binary forms, with or without                     
# modification, are permitted provided that the following conditions                     
# are met:                                                                               
#                                                                                        
#  * Redistributions of source code must retain the above copyright                      
#    notice, this list of conditions and the following disclaimer.                       
#  * Redistributions in binary form must reproduce the above                             
#    copyright notice, this list of conditions and the following                         
#    disclaimer in the documentation and/or other materials provided                     
#    with the distribution.                                                              
#  * Neither the name of Willow Garage, Inc. nor the names of its                        
#    contributors may be used to endorse or promote products derived                     
#    from this software without specific prior written permission.                       
#                                                                                        
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS                    
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT                      
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS                      
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE                         
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,                    
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,                   
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;                       
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER                       
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT                     
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN                      
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE                        
# POSSIBILITY OF SUCH DAMAGE.                                                            


PACKAGE='pointcloud_to_laserscan'
import roslib; roslib.load_manifest(PACKAGE)
import math

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
gen.add("min_height", double_t, 0, "The minimum height to include from the point cloud.",0.10, -10.0, 10.0)
gen.add("max_height", double_t, 0, "The maximum height to include from the point cloud.",0.15, -10.0, 10.0)

gen.add("angle_min", double_t, 0, "The minimum angle of the resulting laser scan.", -math.pi/2.0, -math.pi, math.pi)
gen.add("angle_max", double_t, 0, "The maximum angle of the resulting laser scan.", math.pi/2.0, -math.pi, math.pi)
gen.add("angle_increment", double_t, 0, "The angle increment of the resulting laser scan.", math.pi/180.0/2.0, 0, math.pi)
gen.add("scan_time", double_t, 0, "The scan time of the resulting laser scan.", 1.0/30.0, 0.0, 1)
gen.add("range_min", double_t, 0, "The minimum range of the resulting laser scan.", 0.45, 0.0, 100.0)
gen.add("range_max", double_t, 0, "The maximum range of the resulting laser scan.", 10.0, 0.0, 100.0)

gen.add("output_frame_id", str_t, 0, "The frame id of the resulting laser scan.","/openi_depth_frame")

exit(gen.generate(PACKAGE, "cloud_to_scan_dynamic_reconfigure", "CloudScan"))
